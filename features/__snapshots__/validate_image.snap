
[happy day with git config and yaml:stdout - 1]
{"success":true,"components":[{"name":"Unnamed","containerImage":"${REGISTRY}/acceptance/ec-happy-day@${REGISTRY_acceptance/ec-happy-day:latest_HASH}","successes":[{"msg":"Pass","metadata":{"code":"builtin.attestation.signature_check"}},{"msg":"Pass","metadata":{"code":"builtin.attestation.syntax_check"}},{"msg":"Pass","metadata":{"code":"builtin.image.signature_check"}},{"msg":"Pass","metadata":{"code":"main.acceptor"}}],"success":true,"signatures":[${IMAGE_SIGNATURES_JSON_acceptance/ec-happy-day}],"attestations":[{"type":"https://in-toto.io/Statement/v0.1","predicateType":"https://slsa.dev/provenance/v0.2","predicateBuildType":"https://tekton.dev/attestations/chains/pipelinerun@v2","signatures":[${ATTESTATION_SIGNATURES_JSON_acceptance/ec-happy-day}]}]}],"key":${known_PUBLIC_KEY_JSON},"policy":{"sources":[{"policy":["git::https://${GITHOST}/git/happy-day-policy.git"]}],"rekorUrl":"${REKOR}","publicKey":"${known_PUBLIC_KEY}"},"ec-version":"${EC_VERSION}","effective-time":"${TIMESTAMP}"}
---

[happy day with git config and yaml:stderr - 1]

---

[JUnit output format:stdout - 1]
<testsuites tests="5" failures="1"><testsuite name="Unnamed (${REGISTRY}/acceptance/image@${REGISTRY_acceptance/image:latest_HASH})" tests="5" failures="1" errors="0" id="0" time="" timestamp="${TIMESTAMP}"><properties><property name="image" value="${REGISTRY}/acceptance/image@${REGISTRY_acceptance/image:latest_HASH}"></property><property name="key" value="${known_PUBLIC_KEY_XML}"></property><property name="success" value="false"></property>${IMAGE_SIGNATURES_XML_acceptance/image}</properties><testcase name="builtin.attestation.signature_check: Pass" classname="builtin.attestation.signature_check: Pass"></testcase><testcase name="builtin.attestation.syntax_check: Pass" classname="builtin.attestation.syntax_check: Pass"></testcase><testcase name="builtin.image.signature_check: Pass" classname="builtin.image.signature_check: Pass"></testcase><testcase name="main.acceptor: Pass" classname="main.acceptor: Pass"></testcase><testcase name="main.rejector: Fails always" classname="main.rejector: Fails always"><failure message="Fails always"><![CDATA[Fails always]]></failure></testcase></testsuite></testsuites>
---

[JUnit output format:stderr - 1]
Error: success criteria not met

---

[policy and data sources:stdout - 1]
{"success":false,"components":[{"name":"Unnamed","containerImage":"${REGISTRY}/acceptance/ec-happy-day@${REGISTRY_acceptance/ec-happy-day:latest_HASH}","violations":[{"msg":"Failure due to overripeness"},{"msg":"Failure due to spider attack"}],"successes":[{"msg":"Pass","metadata":{"code":"builtin.attestation.signature_check"}},{"msg":"Pass","metadata":{"code":"builtin.attestation.syntax_check"}},{"msg":"Pass","metadata":{"code":"builtin.image.signature_check"}}],"success":false,"signatures":[${IMAGE_SIGNATURES_JSON_acceptance/ec-happy-day}],"attestations":[{"type":"https://in-toto.io/Statement/v0.1","predicateType":"https://slsa.dev/provenance/v0.2","predicateBuildType":"https://tekton.dev/attestations/chains/pipelinerun@v2","signatures":[${ATTESTATION_SIGNATURES_JSON_acceptance/ec-happy-day}]}]}],"key":${known_PUBLIC_KEY_JSON},"policy":{"sources":[{"policy":["git::https://${GITHOST}/git/banana_check.git"],"data":["git::https://${GITHOST}/git/banana_data_1.git"]},{"policy":["git::https://${GITHOST}/git/banana_check.git"],"data":["git::https://${GITHOST}/git/banana_data_2.git"]}],"rekorUrl":"${REKOR}","publicKey":"${known_PUBLIC_KEY}"},"ec-version":"${EC_VERSION}","effective-time":"${TIMESTAMP}"}
---

[policy and data sources:stderr - 1]
Error: success criteria not met

---

[inline policy:stdout - 1]
{"success":true,"components":[{"name":"Unnamed","containerImage":"${REGISTRY}/acceptance/ec-happy-day@${REGISTRY_acceptance/ec-happy-day:latest_HASH}","successes":[{"msg":"Pass","metadata":{"code":"builtin.attestation.signature_check"}},{"msg":"Pass","metadata":{"code":"builtin.attestation.syntax_check"}},{"msg":"Pass","metadata":{"code":"builtin.image.signature_check"}},{"msg":"Pass","metadata":{"code":"main.acceptor"}}],"success":true,"signatures":[${IMAGE_SIGNATURES_JSON_acceptance/ec-happy-day}],"attestations":[{"type":"https://in-toto.io/Statement/v0.1","predicateType":"https://slsa.dev/provenance/v0.2","predicateBuildType":"https://tekton.dev/attestations/chains/pipelinerun@v2","signatures":[${ATTESTATION_SIGNATURES_JSON_acceptance/ec-happy-day}]}]}],"key":${known_PUBLIC_KEY_JSON},"policy":{"sources":[{"policy":["git::https://${GITHOST}/git/happy-day-policy.git"]}],"rekorUrl":"${REKOR}","publicKey":"${known_PUBLIC_KEY}"},"ec-version":"${EC_VERSION}","effective-time":"${TIMESTAMP}"}
---

[inline policy:stderr - 1]

---

[happy day with git config and json:stdout - 1]
{"success":true,"components":[{"name":"Unnamed","containerImage":"${REGISTRY}/acceptance/ec-happy-day@${REGISTRY_acceptance/ec-happy-day:latest_HASH}","successes":[{"msg":"Pass","metadata":{"code":"builtin.attestation.signature_check"}},{"msg":"Pass","metadata":{"code":"builtin.attestation.syntax_check"}},{"msg":"Pass","metadata":{"code":"builtin.image.signature_check"}},{"msg":"Pass","metadata":{"code":"main.acceptor"}}],"success":true,"signatures":[${IMAGE_SIGNATURES_JSON_acceptance/ec-happy-day}],"attestations":[{"type":"https://in-toto.io/Statement/v0.1","predicateType":"https://slsa.dev/provenance/v0.2","predicateBuildType":"https://tekton.dev/attestations/chains/pipelinerun@v2","signatures":[${ATTESTATION_SIGNATURES_JSON_acceptance/ec-happy-day}]}]}],"key":${known_PUBLIC_KEY_JSON},"policy":{"sources":[{"policy":["git::https://${GITHOST}/git/happy-day-policy.git"]}],"rekorUrl":"${REKOR}","publicKey":"${known_PUBLIC_KEY}"},"ec-version":"${EC_VERSION}","effective-time":"${TIMESTAMP}"}
---

[happy day with git config and json:stderr - 1]

---

[future failure is converted to a warning:stdout - 1]
{"success":true,"components":[{"name":"Unnamed","containerImage":"${REGISTRY}/acceptance/ec-happy-day@${REGISTRY_acceptance/ec-happy-day:latest_HASH}","warnings":[{"msg":"Fails in 2099","metadata":{"effective_on":"2099-01-01T00:00:00Z"}}],"successes":[{"msg":"Pass","metadata":{"code":"builtin.attestation.signature_check"}},{"msg":"Pass","metadata":{"code":"builtin.attestation.syntax_check"}},{"msg":"Pass","metadata":{"code":"builtin.image.signature_check"}}],"success":true,"signatures":[${IMAGE_SIGNATURES_JSON_acceptance/ec-happy-day}],"attestations":[{"type":"https://in-toto.io/Statement/v0.1","predicateType":"https://slsa.dev/provenance/v0.2","predicateBuildType":"https://tekton.dev/attestations/chains/pipelinerun@v2","signatures":[${ATTESTATION_SIGNATURES_JSON_acceptance/ec-happy-day}]}]}],"key":${known_PUBLIC_KEY_JSON},"policy":{"sources":[{"policy":["git::https://${GITHOST}/git/future-deny-policy.git"]}],"rekorUrl":"${REKOR}","publicKey":"${known_PUBLIC_KEY}"},"ec-version":"${EC_VERSION}","effective-time":"${TIMESTAMP}"}
---

[future failure is converted to a warning:stderr - 1]

---

[Custom rule data:stdout - 1]
{"success":true,"components":[{"name":"Unnamed","containerImage":"${REGISTRY}/acceptance/image@${REGISTRY_acceptance/image:latest_HASH}","successes":[{"msg":"Pass","metadata":{"code":"builtin.attestation.signature_check"}},{"msg":"Pass","metadata":{"code":"builtin.attestation.syntax_check"}},{"msg":"Pass","metadata":{"code":"builtin.image.signature_check"}}],"success":true,"signatures":[${IMAGE_SIGNATURES_JSON_acceptance/image}],"attestations":[{"type":"https://in-toto.io/Statement/v0.1","predicateType":"https://slsa.dev/provenance/v0.2","predicateBuildType":"https://tekton.dev/attestations/chains/pipelinerun@v2","signatures":[${ATTESTATION_SIGNATURES_JSON_acceptance/image}]}]}],"key":${known_PUBLIC_KEY_JSON},"policy":{"sources":[{"policy":["git::https://${GITHOST}/git/my-policy1.git"],"ruleData":{"custom":"data1"}},{"policy":["git::https://${GITHOST}/git/my-policy2.git"],"ruleData":{"other":"data2"}}],"publicKey":"${known_PUBLIC_KEY}"},"ec-version":"${EC_VERSION}","effective-time":"2014-05-31T00:00:00Z"}
---

[Custom rule data:stderr - 1]

---

[multiple policy sources with multiple source groups:stdout - 1]
{"success":false,"components":[{"name":"Unnamed","containerImage":"${REGISTRY}/acceptance/ec-multiple-sources@${REGISTRY_acceptance/ec-multiple-sources:latest_HASH}","violations":[{"msg":"Fails always","metadata":{"code":"main.rejector"}}],"warnings":[{"msg":"Has a warning"}],"successes":[{"msg":"Pass","metadata":{"code":"builtin.attestation.signature_check"}},{"msg":"Pass","metadata":{"code":"builtin.attestation.syntax_check"}},{"msg":"Pass","metadata":{"code":"builtin.image.signature_check"}},{"msg":"Pass","metadata":{"code":"main.acceptor"}}],"success":false,"signatures":[${IMAGE_SIGNATURES_JSON_acceptance/ec-multiple-sources}],"attestations":[{"type":"https://in-toto.io/Statement/v0.1","predicateType":"https://slsa.dev/provenance/v0.2","predicateBuildType":"https://tekton.dev/attestations/chains/pipelinerun@v2","signatures":[${ATTESTATION_SIGNATURES_JSON_acceptance/ec-multiple-sources}]}]}],"key":${known_PUBLIC_KEY_JSON},"policy":{"sources":[{"policy":["git::https://${GITHOST}/git/repository1.git"]},{"policy":["git::https://${GITHOST}/git/repository2.git"]},{"policy":["git::https://${GITHOST}/git/repository3.git"]}],"rekorUrl":"${REKOR}","publicKey":"${known_PUBLIC_KEY}"},"ec-version":"${EC_VERSION}","effective-time":"${TIMESTAMP}"}
---

[multiple policy sources with multiple source groups:stderr - 1]
Error: success criteria not met

---

[mismatched image digest in signature:stdout - 1]
{"success":false,"components":[{"name":"Unnamed","containerImage":"${REGISTRY}/acceptance/bad-actor@${REGISTRY_acceptance/bad-actor:latest_HASH}","violations":[{"msg":"No image signatures found matching the given public key. Verify the correct public key was provided, and a signature was created.","metadata":{"code":"builtin.image.signature_check"}}],"successes":[{"msg":"Pass","metadata":{"code":"builtin.attestation.signature_check"}},{"msg":"Pass","metadata":{"code":"builtin.attestation.syntax_check"}},{"msg":"Pass","metadata":{"code":"main.acceptor"}}],"success":false,"attestations":[{"type":"https://in-toto.io/Statement/v0.1","predicateType":"https://slsa.dev/provenance/v0.2","predicateBuildType":"https://tekton.dev/attestations/chains/pipelinerun@v2","signatures":[${ATTESTATION_SIGNATURES_JSON_acceptance/bad-actor}]}]}],"key":${known_PUBLIC_KEY_JSON},"policy":{"sources":[{"policy":["git::https://${GITHOST}/git/mismatched-image-digest.git"]}],"publicKey":"${known_PUBLIC_KEY}"},"ec-version":"${EC_VERSION}","effective-time":"${TIMESTAMP}"}
---

[mismatched image digest in signature:stderr - 1]
Error: success criteria not met

---

[policy rule filtering:stdout - 1]
{"success":true,"components":[{"name":"Unnamed","containerImage":"${REGISTRY}/acceptance/ec-happy-day@${REGISTRY_acceptance/ec-happy-day:latest_HASH}","successes":[{"msg":"Pass","metadata":{"code":"builtin.attestation.signature_check"}},{"msg":"Pass","metadata":{"code":"builtin.attestation.syntax_check"}},{"msg":"Pass","metadata":{"code":"builtin.image.signature_check"}},{"msg":"Pass","metadata":{"code":"filtering.always_pass"}},{"msg":"Pass","metadata":{"code":"filtering.always_pass_with_collection"}}],"success":true,"signatures":[${IMAGE_SIGNATURES_JSON_acceptance/ec-happy-day}],"attestations":[{"type":"https://in-toto.io/Statement/v0.1","predicateType":"https://slsa.dev/provenance/v0.2","predicateBuildType":"https://tekton.dev/attestations/chains/pipelinerun@v2","signatures":[${ATTESTATION_SIGNATURES_JSON_acceptance/ec-happy-day}]}]}],"key":${known_PUBLIC_KEY_JSON},"policy":{"sources":[{"policy":["git::https://${GITHOST}/git/happy-day-policy.git"]}],"configuration":{"exclude":["filtering.always_fail","filtering.always_fail_with_collection"],"include":["@stamps","filtering.always_pass"]},"rekorUrl":"${REKOR}","publicKey":"${known_PUBLIC_KEY}"},"ec-version":"${EC_VERSION}","effective-time":"${TIMESTAMP}"}
---

[policy rule filtering:stderr - 1]

---

[application snapshot reference:stdout - 1]
{"success":true,"snapshot":"acceptance/happy","components":[{"name":"Happy","containerImage":"${REGISTRY}/acceptance/ec-happy-day@${REGISTRY_acceptance/ec-happy-day:latest_HASH}","successes":[{"msg":"Pass","metadata":{"code":"builtin.attestation.signature_check"}},{"msg":"Pass","metadata":{"code":"builtin.attestation.syntax_check"}},{"msg":"Pass","metadata":{"code":"builtin.image.signature_check"}},{"msg":"Pass","metadata":{"code":"main.acceptor"}}],"success":true,"signatures":[${IMAGE_SIGNATURES_JSON_acceptance/ec-happy-day}],"attestations":[{"type":"https://in-toto.io/Statement/v0.1","predicateType":"https://slsa.dev/provenance/v0.2","predicateBuildType":"https://tekton.dev/attestations/chains/pipelinerun@v2","signatures":[${ATTESTATION_SIGNATURES_JSON_acceptance/ec-happy-day}]}]}],"key":${known_PUBLIC_KEY_JSON},"policy":{"sources":[{"policy":["git::https://${GITHOST}/git/happy-day-policy.git"]}],"publicKey":"${known_PUBLIC_KEY}"},"ec-version":"${EC_VERSION}","effective-time":"${TIMESTAMP}"}
---

[application snapshot reference:stderr - 1]

---

[multiple policy sources with one source group:stdout - 1]
{"success":false,"components":[{"name":"Unnamed","containerImage":"${REGISTRY}/acceptance/ec-multiple-sources@${REGISTRY_acceptance/ec-multiple-sources:latest_HASH}","violations":[{"msg":"Fails always","metadata":{"code":"main.rejector"}}],"warnings":[{"msg":"Has a warning"}],"successes":[{"msg":"Pass","metadata":{"code":"builtin.attestation.signature_check"}},{"msg":"Pass","metadata":{"code":"builtin.attestation.syntax_check"}},{"msg":"Pass","metadata":{"code":"builtin.image.signature_check"}},{"msg":"Pass","metadata":{"code":"main.acceptor"}}],"success":false,"signatures":[${IMAGE_SIGNATURES_JSON_acceptance/ec-multiple-sources}],"attestations":[{"type":"https://in-toto.io/Statement/v0.1","predicateType":"https://slsa.dev/provenance/v0.2","predicateBuildType":"https://tekton.dev/attestations/chains/pipelinerun@v2","signatures":[${ATTESTATION_SIGNATURES_JSON_acceptance/ec-multiple-sources}]}]}],"key":${known_PUBLIC_KEY_JSON},"policy":{"sources":[{"policy":["git::https://${GITHOST}/git/repository1.git","git::https://${GITHOST}/git/repository2.git","git::https://${GITHOST}/git/repository3.git"]}],"rekorUrl":"${REKOR}","publicKey":"${known_PUBLIC_KEY}"},"ec-version":"${EC_VERSION}","effective-time":"${TIMESTAMP}"}
---

[multiple policy sources with one source group:stderr - 1]
Error: success criteria not met

---

[unexpected image signature cert:stdout - 1]
{
  "success": false,
  "components": [
    {
      "name": "Unnamed",
      "containerImage": "${REGISTRY}/acceptance/unexpected-keyless-cert@${REGISTRY_acceptance/unexpected-keyless-cert:latest_HASH}",
      "violations": [
        {
          "msg": "Image attestation check failed: no matching attestations:\nnone of the expected identities matched what was in the certificate, got subjects [${CERT_IDENTITY}] with issuer ${CERT_ISSUER}",
          "metadata": {
            "code": "builtin.attestation.signature_check"
          }
        },
        {
          "msg": "Image signature check failed: no matching signatures:\nnone of the expected identities matched what was in the certificate, got subjects [${CERT_IDENTITY}] with issuer ${CERT_ISSUER}",
          "metadata": {
            "code": "builtin.image.signature_check"
          }
        }
      ],
      "success": false
    }
  ],
  "key": "",
  "policy": {
    "sources": [
      {
        "policy": [
          "git::https://${GITHOST}/git/unexpected-keyless-cert.git"
        ]
      }
    ],
    "rekorUrl": "http://this.is.ignored"
  },
  "ec-version": "${EC_VERSION}",
  "effective-time": "${TIMESTAMP}"
}
---

[unexpected image signature cert:stderr - 1]
Error: success criteria not met

---

[invalid image signature:stdout - 1]
{"success":false,"components":[{"name":"Unnamed","containerImage":"${REGISTRY}/acceptance/invalid-image-signature@${REGISTRY_acceptance/invalid-image-signature:latest_HASH}","violations":[{"msg":"No image attestations found matching the given public key. Verify the correct public key was provided, and one or more attestations were created.","metadata":{"code":"builtin.attestation.signature_check"}},{"msg":"No image signatures found matching the given public key. Verify the correct public key was provided, and a signature was created.","metadata":{"code":"builtin.image.signature_check"}}],"success":false}],"key":${unknown_PUBLIC_KEY_JSON},"policy":{"sources":[{"policy":["git::https://${GITHOST}/git/invalid-image-signature.git"]}],"rekorUrl":"${REKOR}","publicKey":"${unknown_PUBLIC_KEY}"},"ec-version":"${EC_VERSION}","effective-time":"${TIMESTAMP}"}
---

[invalid image signature:stderr - 1]
Error: success criteria not met

---

[policy rule filtering for successes:stdout - 1]
{"success":true,"components":[{"name":"Unnamed","containerImage":"${REGISTRY}/acceptance/ec-happy-day@${REGISTRY_acceptance/ec-happy-day:latest_HASH}","successes":[{"msg":"Pass","metadata":{"code":"builtin.attestation.signature_check"}},{"msg":"Pass","metadata":{"code":"builtin.attestation.syntax_check"}},{"msg":"Pass","metadata":{"code":"builtin.image.signature_check"}},{"msg":"Pass","metadata":{"code":"filtering.always_pass"}}],"success":true,"signatures":[${IMAGE_SIGNATURES_JSON_acceptance/ec-happy-day}],"attestations":[{"type":"https://in-toto.io/Statement/v0.1","predicateType":"https://slsa.dev/provenance/v0.2","predicateBuildType":"https://tekton.dev/attestations/chains/pipelinerun@v2","signatures":[${ATTESTATION_SIGNATURES_JSON_acceptance/ec-happy-day}]}]}],"key":${known_PUBLIC_KEY_JSON},"policy":{"sources":[{"policy":["git::https://${GITHOST}/git/happy-day-policy.git"]}],"configuration":{"exclude":["filtering.always_pass_with_collection","filtering.always_fail_with_collection"],"include":["@stamps","filtering.always_pass"]},"publicKey":"${known_PUBLIC_KEY}"},"ec-version":"${EC_VERSION}","effective-time":"${TIMESTAMP}"}
---

[policy rule filtering for successes:stderr - 1]

---

[happy day with missing git config:stdout - 1]

---

[happy day with missing git config:stderr - 1]
Error: 1 error occurred:
    * No suitable config file found at git::https://${GITHOST}/git/happy-config.git



---

[using attestation time as effective time:stdout - 1]
{"success":false,"components":[{"name":"Unnamed","containerImage":"${REGISTRY}/acceptance/ec-happy-day@${REGISTRY_acceptance/ec-happy-day:latest_HASH}","violations":[{"msg":"Fails in 2099","metadata":{"effective_on":"2099-01-01T00:00:00Z"}}],"successes":[{"msg":"Pass","metadata":{"code":"builtin.attestation.signature_check"}},{"msg":"Pass","metadata":{"code":"builtin.attestation.syntax_check"}},{"msg":"Pass","metadata":{"code":"builtin.image.signature_check"}}],"success":false,"signatures":[${IMAGE_SIGNATURES_JSON_acceptance/ec-happy-day}],"attestations":[{"type":"https://in-toto.io/Statement/v0.1","predicateType":"https://slsa.dev/provenance/v0.2","predicateBuildType":"https://tekton.dev/attestations/chains/pipelinerun@v2","signatures":[${ATTESTATION_SIGNATURES_JSON_acceptance/ec-happy-day}]}]}],"key":${known_PUBLIC_KEY_JSON},"policy":{"sources":[{"policy":["git::https://${GITHOST}/git/future-deny-policy.git"]}],"publicKey":"${known_PUBLIC_KEY}"},"ec-version":"${EC_VERSION}","effective-time":"2100-01-01T00:00:00Z"}
---

[using attestation time as effective time:stderr - 1]
Error: success criteria not met

---

[inline application snapshot:stdout - 1]
{"success":true,"components":[{"name":"Happy","containerImage":"${REGISTRY}/acceptance/ec-happy-day@${REGISTRY_acceptance/ec-happy-day:latest_HASH}","successes":[{"msg":"Pass","metadata":{"code":"builtin.attestation.signature_check"}},{"msg":"Pass","metadata":{"code":"builtin.attestation.syntax_check"}},{"msg":"Pass","metadata":{"code":"builtin.image.signature_check"}},{"msg":"Pass","metadata":{"code":"main.acceptor"}}],"success":true,"signatures":[${IMAGE_SIGNATURES_JSON_acceptance/ec-happy-day}],"attestations":[{"type":"https://in-toto.io/Statement/v0.1","predicateType":"https://slsa.dev/provenance/v0.2","predicateBuildType":"https://tekton.dev/attestations/chains/pipelinerun@v2","signatures":[${ATTESTATION_SIGNATURES_JSON_acceptance/ec-happy-day}]}]}],"key":${known_PUBLIC_KEY_JSON},"policy":{"sources":[{"policy":["git::https://${GITHOST}/git/happy-day-policy.git"]}],"publicKey":"${known_PUBLIC_KEY}"},"ec-version":"${EC_VERSION}","effective-time":"${TIMESTAMP}"}
---

[inline application snapshot:stderr - 1]

---

[happy day with keyless:stdout - 1]
{
  "success": true,
  "components": [
    {
      "name": "Unnamed",
      "containerImage": "${REGISTRY}/acceptance/ec-happy-day-keyless@${REGISTRY_acceptance/ec-happy-day-keyless:latest_HASH}",
      "successes": [
        {
          "msg": "Pass",
          "metadata": {
            "code": "builtin.attestation.signature_check"
          }
        },
        {
          "msg": "Pass",
          "metadata": {
            "code": "builtin.attestation.syntax_check"
          }
        },
        {
          "msg": "Pass",
          "metadata": {
            "code": "builtin.image.signature_check"
          }
        },
        {
          "msg": "Pass",
          "metadata": {
            "code": "keyless.no_attestation_signature_info"
          }
        },
        {
          "msg": "Pass",
          "metadata": {
            "code": "keyless.no_attestation_signer_certificate"
          }
        },
        {
          "msg": "Pass",
          "metadata": {
            "code": "keyless.no_signature_info"
          }
        },
        {
          "msg": "Pass",
          "metadata": {
            "code": "keyless.no_signer_certificate"
          }
        },
        {
          "msg": "Pass",
          "metadata": {
            "code": "keyless.unexpected_attestation_signer"
          }
        },
        {
          "msg": "Pass",
          "metadata": {
            "code": "keyless.unexpected_signer"
          }
        }
      ],
      "success": true,
      "signatures": [
        {
          "keyid": "00c419e4c566a0c1b7ae9f41e7934148b370f706",
          "sig": "MEQCIFjxwmv6sDVVuz7aqt9Jx9qdLgzXjKZVaXSR8L5tUEwDAiAf6fK5o9dIGdrb/h0IE8+9edv66ZNrj78TawfN4TiBJw==",
          "certificate": "-----BEGIN CERTIFICATE-----\nMIIExDCCAqygAwIBAgIUBP+rZIG1OH9giEpjRxN4qascyOIwDQYJKoZIhvcNAQEL\nBQAwfjEMMAoGA1UEBhMDVVNBMRMwEQYDVQQIEwpDYWxpZm9ybmlhMRYwFAYDVQQH\nEw1TYW4gRnJhbmNpc2NvMRYwFAYDVQQJEw01NDggTWFya2V0IFN0MQ4wDAYDVQQR\nEwU1NzI3NDEZMBcGA1UEChMQTGludXggRm91bmRhdGlvbjAeFw0yMzA0MjcxMzA2\nMDlaFw0yMzA0MjcxMzE2MDlaMAAwWTATBgcqhkjOPQIBBggqhkjOPQMBBwNCAASo\n1+wIUXyJnqaO85BCyNPC2BaQrEF4l9s8ww/UUxi7Hp4pwHkKnbqB0DbjD3lx9cp3\nx6fvzfhW3LMPh88+hRMfo4IBgTCCAX0wDgYDVR0PAQH/BAQDAgeAMBMGA1UdJQQM\nMAoGCCsGAQUFBwMDMB0GA1UdDgQWBBQAxBnkxWagwbeun0Hnk0FIs3D3BjAfBgNV\nHSMEGDAWgBSWazEzGwTVRmprEcQdOXantR/gOzBOBgNVHREBAf8ERDBChkBodHRw\nczovL2t1YmVybmV0ZXMuaW8vbmFtZXNwYWNlcy9kZWZhdWx0L3NlcnZpY2VhY2Nv\ndW50cy9kZWZhdWx0MDoGCisGAQQBg78wAQEELGh0dHBzOi8va3ViZXJuZXRlcy5k\nZWZhdWx0LnN2Yy5jbHVzdGVyLmxvY2FsMIGJBgorBgEEAdZ5AgQCBHsEeQB3AHUA\n0ctyz2UuetifxNgApDrtbAuCICVChqleKIABaN3/g4QAAAGHwtI3PwAABAMARjBE\nAiAxBIitdLSizRTHBlwJ4lxfb/J2ZuJtVFCnxclcl43LcQIgJJWhdlosvbIuWDPt\nC2RK4Zokx3LoQiViSgL4lJOMNz0wDQYJKoZIhvcNAQELBQADggIBAB0lxL/jSpCm\n03miCWEPP2cEBq1hRFJXYFIIRPn13hx6++2DZASnITFYQ1EzyV3XsV9DHpEXAN+O\nMjhpNlRWXPRV5V32vrHy6orSY0qGUvselhoyX4J8wQUESp4QXMrcbrt3GKNi/P+I\nkXKCHrpyQ3HsyUYWqeGCxQyGKtbqlYYJr/6YHiidtJZHxqMrQBDZe/Ia66LD1Xwb\nyYePs0CWJkvDCC9ho64Sz7Z+dW8LDlUZkpwVv/A83TrY/lLg8X6K5De75FAGJ3Fr\nc2a9u6ns1effhdYAHDJ17kHnqjrQpw6MdzBAF2NJlXZLzkvWtqqBWek4ySiXVxUT\n4KwLb2My9pgHvGYXh3cyoCWIanESUaShnz6VZ6YTfSJkFoodfMI44+kwNevJal8L\nIcR7ZPUAEgLKfIiFcQvug+lZI7NRXGAaotGKRboYWkXe3+E0UkdF5vDKPLth1Eyx\n+ZEoW3WRRRo9JF6ylXEFhaqjwisZsU6d7bE1wIkyuFyvs5cWj4C3/8emWuA28AQT\nyF3BijYlQUd6N88X77+PyQJSx45yt1EEiGRnjc4RGmNIqNPwbLaypepZPxXUeo0B\ngwgjlKYUe8vm33ve07m2y3o1numC6sTnRsa8rif2yQIa92wqPPXJhb8RyPKzgA9t\nSvWmpUTT1chAjMKhTk+Qwls0l6zGQ3v2\n-----END CERTIFICATE-----\n",
          "chain": [
            "-----BEGIN CERTIFICATE-----\n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\n-----END CERTIFICATE-----\n"
          ],
          "metadata": {
            "Fulcio Issuer": "${CERT_ISSUER}",
            "Issuer": "O=Linux Foundation,POSTALCODE=57274,STREET=548 Market St,L=San Francisco,ST=California,C=USA",
            "Not After": "${TIMESTAMP}",
            "Not Before": "${TIMESTAMP}",
            "Serial Number": "4ffab6481b5387f60884a63471378a9ab1cc8e2",
            "Subject Alternative Name": "URIs:${CERT_IDENTITY}"
          }
        }
      ],
      "attestations": [
        {
          "type": "https://in-toto.io/Statement/v0.1",
          "predicateType": "https://slsa.dev/provenance/v0.2",
          "predicateBuildType": "tekton.dev/v1beta1/PipelineRun",
          "signatures": [
            {
              "keyid": "0f72f6db76966f1917a793e742bc01780cbbc7f8",
              "sig": "MEUCIQDvnjj8F5B2PFLk85BNvFZpg7sN0njFV0LdwC9ix/gXzwIgAWc00KaPdFHo1DkvK8c1/+zAgrmYNLvf+bbmTl/pY2A=",
              "certificate": "-----BEGIN CERTIFICATE-----\nMIIExTCCAq2gAwIBAgIUdYQ1VxUJzOBcTR31+5HFDZMlEf4wDQYJKoZIhvcNAQEL\nBQAwfjEMMAoGA1UEBhMDVVNBMRMwEQYDVQQIEwpDYWxpZm9ybmlhMRYwFAYDVQQH\nEw1TYW4gRnJhbmNpc2NvMRYwFAYDVQQJEw01NDggTWFya2V0IFN0MQ4wDAYDVQQR\nEwU1NzI3NDEZMBcGA1UEChMQTGludXggRm91bmRhdGlvbjAeFw0yMzA0MjcxMzA2\nMTFaFw0yMzA0MjcxMzE2MTFaMAAwWTATBgcqhkjOPQIBBggqhkjOPQMBBwNCAARq\nSq0mSHtXN67A+gUsg3VmH3wk80K35z0lKSQi2T6c9JTqErlF/jbbjVLnYy5HW2hv\nRm/BX8UJ5JN5DNTB8xFwo4IBgjCCAX4wDgYDVR0PAQH/BAQDAgeAMBMGA1UdJQQM\nMAoGCCsGAQUFBwMDMB0GA1UdDgQWBBQPcvbbdpZvGRenk+dCvAF4DLvH+DAfBgNV\nHSMEGDAWgBSWazEzGwTVRmprEcQdOXantR/gOzBOBgNVHREBAf8ERDBChkBodHRw\nczovL2t1YmVybmV0ZXMuaW8vbmFtZXNwYWNlcy9kZWZhdWx0L3NlcnZpY2VhY2Nv\ndW50cy9kZWZhdWx0MDoGCisGAQQBg78wAQEELGh0dHBzOi8va3ViZXJuZXRlcy5k\nZWZhdWx0LnN2Yy5jbHVzdGVyLmxvY2FsMIGKBgorBgEEAdZ5AgQCBHwEegB4AHYA\n0ctyz2UuetifxNgApDrtbAuCICVChqleKIABaN3/g4QAAAGHwtJBiwAABAMARzBF\nAiEA3q1AbBNTd4oH53Xlym1DSKerp3yg8cGyxZMNcfvKDT8CIB9CJp3VtNBV+LFG\nEHMJpS+A2BpAnDbviNCwDgEUnPiSMA0GCSqGSIb3DQEBCwUAA4ICAQAPBEOVqFTw\nimmxxpWx+xAggvzId7Edcj+j+vB15h6fXIYajhz2+yNiUoiX8N9MRKhYmT8fDJQB\nUReobZYDKFPS8mNFxnCK7yfOSLdhWx+TJs71tZF4R8ULGX0H1ZOIkhLiDA0pVmN6\n6aLR8OEfdvwTFIVccIWWXUBqQtx8JOaww9LTF6Hfr+hJEvpY/YBeguAWsmv6O4J1\nSdmwT/FOFyVbRqcBxcSM/Nm45uQqst8USs+rw4wlm+s8KIcr1r0hjILom6G1qEyi\n7trQ3JvZLH3C18i77nowSzaluHQG9APXGfTXYyzUS5Kj6mPc5zhhwVoDcbD1VFzE\n9ay5AL9Fy3IwkKtKNfxW4ZG26dZTuRVMTbP4Uz2drSDmENbzYvT5HF41fjt5I9fU\nKnUpJNoxthCluYsHbGVplmzsslY5h9dKHWIjAFyCqS1obdJ3PoIgdYvSGnMtIpsG\n0wEI/w1Yq1iATdrxEGTVmzxX0g/kcpEEItAugNS4Sp13lRowTT3muxtkc4FvcO6k\nLBCxmkGR0Ww1dkKJeaAKB9Ftt01MVDfNlsvfrU89QzCa55aqAUp9ycbzvFTWVfgJ\niWv6Nb3R2mVhy2p+r/6Q7g9jC8H3LN3e+xKTwMX+CTTJ8x1yWfIqrvzudYaKDvjK\nvR3LCBJibMDXt2vtFQRTQt944euIxKvR4w==\n-----END CERTIFICATE-----\n",
              "chain": [
                "-----BEGIN CERTIFICATE-----\n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\n-----END CERTIFICATE-----\n"
              ],
              "metadata": {
                "Fulcio Issuer": "${CERT_ISSUER}",
                "Issuer": "O=Linux Foundation,POSTALCODE=57274,STREET=548 Market St,L=San Francisco,ST=California,C=USA",
                "Not After": "${TIMESTAMP}",
                "Not Before": "${TIMESTAMP}",
                "Serial Number": "758435571509cce05c4d1df5fb91c50d932511fe",
                "Subject Alternative Name": "URIs:${CERT_IDENTITY}"
              }
            }
          ]
        }
      ]
    }
  ],
  "key": "",
  "policy": {
    "sources": [
      {
        "policy": [
          "git::https://${GITHOST}/git/happy-day-policy.git"
        ]
      }
    ],
    "rekorUrl": "http://this.is.ignored"
  },
  "ec-version": "${EC_VERSION}",
  "effective-time": "${TIMESTAMP}"
}
---

[happy day with keyless:stderr - 1]

---

[mismatched image digest in attestation:stdout - 1]
{"success":false,"components":[{"name":"Unnamed","containerImage":"${REGISTRY}/acceptance/bad-actor@${REGISTRY_acceptance/bad-actor:latest_HASH}","violations":[{"msg":"No image attestations found matching the given public key. Verify the correct public key was provided, and one or more attestations were created.","metadata":{"code":"builtin.attestation.signature_check"}}],"successes":[{"msg":"Pass","metadata":{"code":"builtin.image.signature_check"}}],"success":false}],"key":${known_PUBLIC_KEY_JSON},"policy":{"sources":[{"policy":["git::https://${GITHOST}/git/mismatched-image-digest.git"]}],"publicKey":"${known_PUBLIC_KEY}"},"ec-version":"${EC_VERSION}","effective-time":"${TIMESTAMP}"}
---

[mismatched image digest in attestation:stderr - 1]
Error: success criteria not met

---

[artifact relocation:stdout - 1]
{"success":true,"components":[{"name":"Unnamed","containerImage":"${REGISTRY}/acceptance/destination@${REGISTRY_IMAGE_acceptance/destination:latest|acceptance/source:latest_HASH}","successes":[{"msg":"Pass","metadata":{"code":"builtin.attestation.signature_check"}},{"msg":"Pass","metadata":{"code":"builtin.attestation.syntax_check"}},{"msg":"Pass","metadata":{"code":"builtin.image.signature_check"}},{"msg":"Pass","metadata":{"code":"main.acceptor"}}],"success":true,"signatures":[${IMAGE_SIGNATURES_JSON_acceptance/source}],"attestations":[{"type":"https://in-toto.io/Statement/v0.1","predicateType":"https://slsa.dev/provenance/v0.2","predicateBuildType":"https://tekton.dev/attestations/chains/pipelinerun@v2","signatures":[${ATTESTATION_SIGNATURES_JSON_acceptance/source}]}]}],"key":${known_PUBLIC_KEY_JSON},"policy":{"sources":[{"policy":["git::https://${GITHOST}/git/happy-day-policy.git"]}],"rekorUrl":"${REKOR}","publicKey":"${known_PUBLIC_KEY}"},"ec-version":"${EC_VERSION}","effective-time":"${TIMESTAMP}"}
---

[artifact relocation:stderr - 1]

---
[detailed failures output:stdout - 1]
{"success":false,"components":[{"name":"Unnamed","containerImage":"${REGISTRY}/acceptance/image@${REGISTRY_acceptance/image:latest_HASH}","violations":[{"msg":"Fails always","metadata":{"code":"main.rejector","collections":["A"],"description":"This rule will always fail","solution":"None","title":"Reject rule"}}],"successes":[{"msg":"Pass","metadata":{"code":"builtin.attestation.signature_check","description":"The attestation signature matches the provided public key.","title":"Attestation signature check passed"}},{"msg":"Pass","metadata":{"code":"builtin.attestation.syntax_check","description":"The attestation has correct syntax.","title":"Attestation syntax check passed"}},{"msg":"Pass","metadata":{"code":"builtin.image.signature_check","description":"The image signature matches the provided public key.","title":"Image signature check passed"}},{"msg":"Pass","metadata":{"code":"main.acceptor","collections":["A"],"description":"This rule will never fail","title":"Allow rule"}}],"success":false,"signatures":[${IMAGE_SIGNATURES_JSON_acceptance/image}],"attestations":[{"type":"https://in-toto.io/Statement/v0.1","predicateType":"https://slsa.dev/provenance/v0.2","predicateBuildType":"https://tekton.dev/attestations/chains/pipelinerun@v2","signatures":[${ATTESTATION_SIGNATURES_JSON_acceptance/image}]}]}],"key":${known_PUBLIC_KEY_JSON},"policy":{"sources":[{"policy":["git::https://${GITHOST}/git/happy-day-policy.git"]}],"publicKey":"${known_PUBLIC_KEY}"},"ec-version":"${EC_VERSION}","effective-time":"${TIMESTAMP}"}
---

[detailed failures output:stderr - 1]
Error: success criteria not met

---

[future failure is a deny when using effective-date flag:stdout - 1]
{"success":false,"components":[{"name":"Unnamed","containerImage":"${REGISTRY}/acceptance/ec-happy-day@${REGISTRY_acceptance/ec-happy-day:latest_HASH}","violations":[{"msg":"Fails in 2099","metadata":{"effective_on":"2099-01-01T00:00:00Z"}}],"successes":[{"msg":"Pass","metadata":{"code":"builtin.attestation.signature_check"}},{"msg":"Pass","metadata":{"code":"builtin.attestation.syntax_check"}},{"msg":"Pass","metadata":{"code":"builtin.image.signature_check"}}],"success":false,"signatures":[${IMAGE_SIGNATURES_JSON_acceptance/ec-happy-day}],"attestations":[{"type":"https://in-toto.io/Statement/v0.1","predicateType":"https://slsa.dev/provenance/v0.2","predicateBuildType":"https://tekton.dev/attestations/chains/pipelinerun@v2","signatures":[${ATTESTATION_SIGNATURES_JSON_acceptance/ec-happy-day}]}]}],"key":${known_PUBLIC_KEY_JSON},"policy":{"sources":[{"policy":["git::https://${GITHOST}/git/future-deny-policy.git"]}],"rekorUrl":"${REKOR}","publicKey":"${known_PUBLIC_KEY}"},"ec-version":"${EC_VERSION}","effective-time":"2100-01-01T12:00:00Z"}
---

[future failure is a deny when using effective-date flag:stderr - 1]
Error: success criteria not met

---

[Using OCI bundles:stdout - 1]
{"success":true,"components":[{"name":"Unnamed","containerImage":"${REGISTRY}/acceptance/my-image@${REGISTRY_acceptance/my-image:latest_HASH}","successes":[{"msg":"Pass","metadata":{"code":"builtin.attestation.signature_check"}},{"msg":"Pass","metadata":{"code":"builtin.attestation.syntax_check"}},{"msg":"Pass","metadata":{"code":"builtin.image.signature_check"}},{"msg":"Pass","metadata":{"code":"main.acceptor"}}],"success":true,"signatures":[${IMAGE_SIGNATURES_JSON_acceptance/my-image}],"attestations":[{"type":"https://in-toto.io/Statement/v0.1","predicateType":"https://slsa.dev/provenance/v0.2","predicateBuildType":"https://tekton.dev/attestations/chains/pipelinerun@v2","signatures":[${ATTESTATION_SIGNATURES_JSON_acceptance/my-image}]}]}],"key":${known_PUBLIC_KEY_JSON},"policy":{"sources":[{"policy":["oci::https://${REGISTRY}/acceptance/happy-day-policy:tag","oci::${REGISTRY}/acceptance/allow-all:latest"]}],"publicKey":"${known_PUBLIC_KEY}"},"ec-version":"${EC_VERSION}","effective-time":"${TIMESTAMP}"}
---

[Using OCI bundles:stderr - 1]

---

[Dropping rego capabilities:stdout - 1]

---

[Dropping rego capabilities:stderr - 1]
Error: 1 error occurred:
    * error validating image ${REGISTRY}/acceptance/ec-happy-day of component Unnamed: load: loading policies: get compiler: 3 errors occurred:
${TEMP}/ec-work-${RANDOM}/policy/${RANDOM}/main.rego:14: rego_type_error: undefined function opa.runtime
${TEMP}/ec-work-${RANDOM}/policy/${RANDOM}/main.rego:20: rego_type_error: undefined function http.send
${TEMP}/ec-work-${RANDOM}/policy/${RANDOM}/main.rego:29: rego_type_error: undefined function net.lookup_ip_addr



---

[happy day:stdout - 1]
{"success":true,"components":[{"name":"Unnamed","containerImage":"${REGISTRY}/acceptance/ec-happy-day@${REGISTRY_acceptance/ec-happy-day:latest_HASH}","successes":[{"msg":"Pass","metadata":{"code":"builtin.attestation.signature_check"}},{"msg":"Pass","metadata":{"code":"builtin.attestation.syntax_check"}},{"msg":"Pass","metadata":{"code":"builtin.image.signature_check"}},{"msg":"Pass","metadata":{"code":"main.acceptor"}}],"success":true,"signatures":[${IMAGE_SIGNATURES_JSON_acceptance/ec-happy-day}],"attestations":[{"type":"https://in-toto.io/Statement/v0.1","predicateType":"https://slsa.dev/provenance/v0.2","predicateBuildType":"https://tekton.dev/attestations/chains/pipelinerun@v2","signatures":[${ATTESTATION_SIGNATURES_JSON_acceptance/ec-happy-day}]}]}],"key":${known_PUBLIC_KEY_JSON},"policy":{"sources":[{"policy":["git::https://${GITHOST}/git/happy-day-policy.git"]}],"rekorUrl":"${REKOR}","publicKey":"${known_PUBLIC_KEY}"},"ec-version":"${EC_VERSION}","effective-time":"${TIMESTAMP}"}
---

[happy day:stderr - 1]

---

[rule dependencies:stdout - 1]
{"success":false,"components":[{"name":"Unnamed","containerImage":"${REGISTRY}/acceptance/image@${REGISTRY_acceptance/image:latest_HASH}","violations":[{"msg":"Failure","metadata":{"code":"pkg.fails"}}],"warnings":[{"msg":"Warning","metadata":{"code":"pkg.warns"}}],"successes":[{"msg":"Pass","metadata":{"code":"builtin.attestation.signature_check"}},{"msg":"Pass","metadata":{"code":"builtin.attestation.syntax_check"}},{"msg":"Pass","metadata":{"code":"builtin.image.signature_check"}}],"success":false,"signatures":[${IMAGE_SIGNATURES_JSON_acceptance/image}],"attestations":[{"type":"https://in-toto.io/Statement/v0.1","predicateType":"https://slsa.dev/provenance/v0.2","predicateBuildType":"https://tekton.dev/attestations/chains/pipelinerun@v2","signatures":[${ATTESTATION_SIGNATURES_JSON_acceptance/image}]}]}],"key":${known_PUBLIC_KEY_JSON},"policy":{"sources":[{"policy":["git::https://${GITHOST}/git/with-dependencies.git"]}],"publicKey":"${known_PUBLIC_KEY}"},"ec-version":"${EC_VERSION}","effective-time":"${TIMESTAMP}"}
---

[rule dependencies:stderr - 1]
Error: success criteria not met

---

[successes are not duplicated:stdout - 1]
{"success":false,"components":[{"name":"Unnamed","containerImage":"${REGISTRY}/acceptance/unique-successes@${REGISTRY_acceptance/unique-successes:latest_HASH}","violations":[{"msg":"Always fails","metadata":{"code":"gloomy.sad"}}],"successes":[{"msg":"Pass","metadata":{"code":"builtin.attestation.signature_check"}},{"msg":"Pass","metadata":{"code":"builtin.attestation.syntax_check"}},{"msg":"Pass","metadata":{"code":"builtin.image.signature_check"}},{"msg":"Pass","metadata":{"code":"gloomy.happy"}},{"msg":"Pass","metadata":{"code":"main.acceptor"}}],"success":false,"signatures":[${IMAGE_SIGNATURES_JSON_acceptance/unique-successes}],"attestations":[{"type":"https://in-toto.io/Statement/v0.1","predicateType":"https://slsa.dev/provenance/v0.2","predicateBuildType":"https://tekton.dev/attestations/chains/pipelinerun@v2","signatures":[${ATTESTATION_SIGNATURES_JSON_acceptance/unique-successes}]}]}],"key":${known_PUBLIC_KEY_JSON},"policy":{"sources":[{"policy":["git::https://${GITHOST}/git/unique-successes.git"]}],"rekorUrl":"${REKOR}","publicKey":"${known_PUBLIC_KEY}"},"ec-version":"${EC_VERSION}","effective-time":"${TIMESTAMP}"}
---

[successes are not duplicated:stderr - 1]

---

[Custom rule data:${TMPDIR}/custom-rule-data.yaml - 1]
- - config:
      policy:
        when_ns: 1401494400000000000
    rule_data__configuration__:
      custom: data1
  - config:
      policy:
        when_ns: 1401494400000000000
    rule_data__configuration__:
      other: data2

---
